name: Tests

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: password
          MYSQL_DATABASE: propaganda_testing
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3

    steps:
    - uses: actions/checkout@v4

    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: '8.2'
        extensions: mbstring, dom, fileinfo, mysql, gd, zip, bcmath
        coverage: xdebug

    - name: Cache Composer packages
      id: composer-cache
      uses: actions/cache@v3
      with:
        path: vendor
        key: ${{ runner.os }}-php-${{ hashFiles('**/composer.lock') }}
        restore-keys: |
          ${{ runner.os }}-php-

    - name: Install dependencies
      run: composer install --prefer-dist --no-progress

    - name: Copy .env
      run: php -r "file_exists('.env') || copy('.env.example', '.env');"

    - name: Generate app key
      run: php artisan key:generate

    - name: Configure database
      run: |
        echo "CACHE_DRIVER=array" >> .env
        echo "QUEUE_CONNECTION=sync" >> .env
        echo "SESSION_DRIVER=array" >> .env
        php artisan config:clear
      env:
        DB_CONNECTION: mysql
        DB_HOST: 127.0.0.1
        DB_PORT: 3306
        DB_DATABASE: propaganda_testing
        DB_USERNAME: root
        DB_PASSWORD: password
        CACHE_DRIVER: array
        QUEUE_CONNECTION: sync
        SESSION_DRIVER: array

    - name: Run database migrations
      run: php artisan migrate --force
      env:
        DB_CONNECTION: mysql
        DB_HOST: 127.0.0.1
        DB_PORT: 3306
        DB_DATABASE: propaganda_testing
        DB_USERNAME: root
        DB_PASSWORD: password

    - name: Run critical new functionality tests with coverage
      run: |
        echo "Testing new user management and IAA position accuracy functionality..."
        php artisan test tests/Unit/Commands/CreateSuperAdminCommandTest.php --coverage
        php artisan test tests/Unit/Services/PositionAccuracyTest.php --coverage
        php artisan test tests/Unit/Models/UserTest.php --coverage
        php artisan test tests/Feature/UserManagementTest.php --coverage
      env:
        DB_CONNECTION: mysql
        DB_HOST: 127.0.0.1
        DB_PORT: 3306
        DB_DATABASE: propaganda_testing
        DB_USERNAME: root
        DB_PASSWORD: password

    - name: Upload coverage reports to Codecov
      if: success()
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        flags: unittests
        name: codecov-umbrella